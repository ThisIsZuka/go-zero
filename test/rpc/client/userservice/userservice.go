// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userservice

import (
	"context"

	"test.com/rpc/pb/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddNewUserRequest      = user.AddNewUserRequest
	AddNewUserResponse     = user.AddNewUserResponse
	DeleteUserByIdRequest  = user.DeleteUserByIdRequest
	DeleteUserByIdResponse = user.DeleteUserByIdResponse
	GetAllUserRequest      = user.GetAllUserRequest
	GetAllUsersResponse    = user.GetAllUsersResponse
	GetUserByIdRequest     = user.GetUserByIdRequest
	GetUserByIdResponse    = user.GetUserByIdResponse
	Request                = user.Request
	Response               = user.Response
	User                   = user.User

	UserService interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		GetUserById(ctx context.Context, in *GetUserByIdRequest, opts ...grpc.CallOption) (*GetUserByIdResponse, error)
		GetAllUsers(ctx context.Context, in *GetAllUserRequest, opts ...grpc.CallOption) (*GetAllUsersResponse, error)
		AddNewUser(ctx context.Context, in *AddNewUserRequest, opts ...grpc.CallOption) (*AddNewUserResponse, error)
		DeleteUserById(ctx context.Context, in *DeleteUserByIdRequest, opts ...grpc.CallOption) (*DeleteUserByIdResponse, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

func (m *defaultUserService) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (m *defaultUserService) GetUserById(ctx context.Context, in *GetUserByIdRequest, opts ...grpc.CallOption) (*GetUserByIdResponse, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.GetUserById(ctx, in, opts...)
}

func (m *defaultUserService) GetAllUsers(ctx context.Context, in *GetAllUserRequest, opts ...grpc.CallOption) (*GetAllUsersResponse, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.GetAllUsers(ctx, in, opts...)
}

func (m *defaultUserService) AddNewUser(ctx context.Context, in *AddNewUserRequest, opts ...grpc.CallOption) (*AddNewUserResponse, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.AddNewUser(ctx, in, opts...)
}

func (m *defaultUserService) DeleteUserById(ctx context.Context, in *DeleteUserByIdRequest, opts ...grpc.CallOption) (*DeleteUserByIdResponse, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.DeleteUserById(ctx, in, opts...)
}
